#include <Servo.h>

#define ligaMotor     13  //Saída liga motor
#define desligaMotor  12  //Saída desliga motor
#define freio         11  //Entrada sensor freio
#define off           7   //Entrada pausa no sistema para curva 
#define SERVOPIN      8   //Saída Digital 8 PWM
#define switchSS      10  //Entrada chave liga desliga start/stop (Z)
#define LED           9   //Saída Digital 9 

#define FALSE 0
#define TRUE 1
#define LIGADO  1
#define DESLIGADO 0
#define vecMin  100
#define vecMax  300
#define ZEROvec  50
#define tensaoLigado 3 //valor da tensao que indica que o motor esta ligado (será definido ainda)


Servo servo; // Variável Servo
int pos=0; // Posição Servo
int countDelay = 0;
//boolean on_off; //Chave liga desliga autopilot
boolean estadoMotor = DESLIGADO;
//int vec;  //Valor de velocidade(será definido ainda)
int FSMstate = 0;
boolean erroLigaMotor = DESLIGADO;

int valorInicial; 
float tensao; //valor da tensao lida pelo arduino

void setup() {
  servo.attach(SERVOPIN);
  
  pinMode(ligaMotor,OUTPUT);
  pinMode(desligaMotor,OUTPUT);
  pinMode(freio,INPUT_PULLUP);  //(Fa)
  pinMode(switchSS,INPUT_PULLUP); //(Z)
  pinMode(A0,INPUT);  //velocidade atual
  pinMode(A1,INPUT);  //comparador de tensao 
  pinMode(LED,OUTPUT);
  
  servo.write(0); // Inicia motor posição zero
  estadoMotor = DESLIGADO;
  digitalWrite(ligaMotor,LOW);
  digitalWrite(desligaMotor,LOW);
  
  Serial.begin(9600);
}
//******************40 == velocidade 0 -> está com esse valor para fins de simulação
void loop() {
  switch (FSMstate)
  {
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 0: // ON/OFF  Estado em que o start/stop está desligado
     
       //liga start/stop se a velocidade nao esta proxima de 0
       if(digitalRead(switchSS) == 0 && analogRead(A0)>ZEROvec){
        FSMstate = 1;
       }
       
       //se a velocidade estiver proxima de 0 vai para o estado de Monitoramento ZEROvec
       else if(digitalRead(switchSS) == 0 && analogRead(A0)<ZEROvec){
        digitalWrite(LED,HIGH);//liga o led avisando para acelerar
        FSMstate = 10;
       }   
       
       Serial.println("FSMstate:0"); 
     break;
     
   //////////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 10: // Monitoramento ZEROvec
     
       //Monitora a velocidade esperando que seu valor aumente
       if(digitalRead(switchSS) == 0 && analogRead(A0)>ZEROvec){
        digitalWrite(LED,LOW);//desliga o led
        FSMstate = 1;
       }
       
       // Botao Off pressionado, desliga sistema na curva
       else if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
        FSMstate = 6;
       }
       
       // Freio pressionado
       else if(digitalRead(switchSS) == 0 && digitalRead(freio) == 0 ){
        FSMstate = 7;
       }
       
       //Ativa modo manual
       else if(digitalRead(switchSS) == 1){
        pos=0;
        servo.write(pos);
        digitalWrite(LED,LOW);//desliga o led
        FSMstate = 0;
       }
  
       Serial.println("FSMstate:10"); 
     break;
     
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 1://Monitoramento Velocidade
     
       //Caso a velocidade esteja abaixo de 29km/h e o motor esteja desligado
       if(digitalRead(switchSS) == 0 && analogRead(A0)<vecMax && estadoMotor == DESLIGADO && digitalRead(freio) == 1){
        erroLigaMotor = ligaMotorFunction(); 
        FSMstate = 2;
       }
       
       //Caso a velocidade esteja abaixo de 29km/h e o motor esteja ligado
       else if(digitalRead(switchSS) == 0 && analogRead(A0)<vecMax && estadoMotor == LIGADO && digitalRead(freio) == 1){
        FSMstate = 2;
       }
       
       //Caso a velocidade esteja acima de 29 km/h e o motor esteja desligado
       else if(digitalRead(switchSS) == 0 && analogRead(A0)>vecMax && estadoMotor == DESLIGADO && digitalRead(freio) == 1){ 
        FSMstate = 4;
       }
       
       //Caso a velocidade esteja acima de 29 km/h e o motor esteja ligado
       else if(digitalRead(switchSS) == 0 && analogRead(A0)>vecMax && estadoMotor == LIGADO && digitalRead(freio) == 1){
        desligaMotorFunction(); 
        FSMstate = 4;
       }
       
       // Botao Off pressionado, desliga sistema na curva
       else if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
        FSMstate = 6;
       }
       
       // Freio pressionado
       else if(digitalRead(switchSS) == 0 && digitalRead(freio) == 0 ){// Freio pressionado
        FSMstate = 7;
       }
       
       //Ativa modo manual
       else if(digitalRead(switchSS) == 1 || erroLigaMotor == TRUE){
        pos=0;
        servo.write(pos);
        FSMstate = 0;
       }
       
       Serial.println("FSMstate = 1");
     break;
     
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 2://incremento aceleracao     
  
       //Caso o freio esteja solto
       if( digitalRead(switchSS) == 0 && digitalRead(freio) == 1){
         if(pos<=80) //Aumenta a abertura do borboleta
           pos+=10;
         servo.write(pos); 
         Serial.print("Velocidade: "); 
         Serial.print(analogRead(A0));
         Serial.print("    ; Posicao: "); 
         Serial.println(pos);
         Serial.println("Motor ligado");
         FSMstate = 3;
       }
       
       // Botao Off pressionado, desliga sistema na curva
       else if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
        FSMstate = 6;
       }
       
       // Freio pressionado
       else if(digitalRead(switchSS) == 0 && digitalRead(freio) == 0 ){
         FSMstate = 7;
       }
       
       //Ativa modo manual
       if(digitalRead(switchSS) == 1){
         pos=0;
         servo.write(pos);
         FSMstate = 0;
       }
       
       Serial.println("FSMstate = 2");
     break;
     
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 3://delay
     
      countDelay = 0;
      FSMstate = 1;
      while(countDelay<100){
      
        // Botao Off pressionado, desliga sistema na curva
        if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
          FSMstate = 6;
          break;
        }
      
        // Botao Off pressionado, desliga sistema na curva
          else if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
          FSMstate = 6;
        }
      
        // Freio pressionado
        if(digitalRead(switchSS) == 0 && digitalRead(freio) == 0 ){
          FSMstate = 7;
          break;
        }

        //Ativa modo manual
        if(digitalRead(switchSS) == 1){
          pos=0;
          servo.write(pos);
          FSMstate = 0;
          break;
        }
        
        delay(1);
        countDelay++  
      }
      
      if(countDelay >= 100){
        FSMstate = 1;
      }
      
      Serial.println("FSMstate = 3"); 
     break;
     
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 4://desliga motor
     
      //Velocidade < 19km/h
      if(analogRead(A0)<vecMin && digitalRead(switchSS) == 0 && digitalRead(freio) == 1){
        erroLigaMotor = ligaMotorFunction();
        FSMstate = 5;
      }
      
      // Botao Off pressionado, desliga sistema na curva
        else if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
        FSMstate = 6;
      }
      
      //Freio pressionado
      else if(digitalRead(switchSS) == 0 && digitalRead(freio) == 0 ){
        FSMstate = 7;
      }
      
      //Ativa modo manual
      if(digitalRead(switchSS) == 1 || erroLigaMotor==TRUE){
        pos=0;
        servo.write(pos);
        FSMstate = 0;
      }
      
      Serial.println("FSMstate = 4"); 
     break;
     
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     case 5://liga motor
     
      //Resposta da comparacao do sinal LM2097 (diferenca de tensao se manteve 2V)
      if(  digitalRead(switchSS) == 0 && digitalRead(freio) == 1 && digitalRead(Lx)==1){
        FSMstate = 1;
      }
      
      // Botao Off pressionado, desliga sistema na curva
        else if(digitalRead(switchSS) == 0 && digitalRead(off) == 0 ){
        FSMstate = 6;
      }
      
      // Freio pressionado
      else if(digitalRead(switchSS) == 0 && digitalRead(freio) == 0 ){
        FSMstate = 7;
      }
      
      //Ativa modo manual
      if(digitalRead(switchSS) == 1){
        pos=0;
        servo.write(pos);
        FSMstate = 0;
      }
      
      Serial.println("FSMstate = 5"); 
     break;
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    case 6://Off Curva
    
      //Botao Off acionado
      if(digitalRead(Off) == 0){
            pos=0;
            servo.write(pos);
            Serial.println("Pausa no Start/Stop");
            Serial.print("Posicao: "); 
            Serial.println(pos);
       }
       
      // Botao Off solto
      else if(digitalRead(switchSS) == 0 && digitalRead(Off) == 1 ){
        FSMstate = 1;
      }
      
      //Ativa modo manual
      if(digitalRead(switchSS) == 1){
        pos=0;
        servo.write(pos);
        FSMstate = 0;
      }
      
      Serial.println("FSMstate = 6"); 
     break;
     
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    case 7://freou
    
      //Freio pressionado
      if(digitalRead(freio) == 0){
            pos=0;
            servo.write(pos);
            Serial.println("Freio");
            Serial.print("Posicao: "); 
            Serial.println(pos);
       }
       
      // Freio solto
      else if(digitalRead(switchSS) == 0 && digitalRead(freio) == 1 ){
        FSMstate = 1;
      }
      
      //Ativa modo manual
      if(digitalRead(switchSS) == 1){
        pos=0;
        servo.write(pos);
        FSMstate = 0;
      }
      
      Serial.println("FSMstate = 7"); 
     break;
     
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     default:
      FSMstate = 0;
      
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void ligaMotorFunction(){
      digitalWrite(ligaMotor,HIGH);//
      Serial.println("Ligando Motor");
      int i = 0;
      int auxBreak = 0;
      
      //verifica se a tensao esta dentro dos valores predeterminados (no caso 2.5 a 3.50 por 1 segundo), se em 20 segundos ela nao ficar nesse intervalo um erro 
      //tera sido detectado e o sistema voltara para o estado on/off
      while(i<10){
        
        delay(100);
        analiseTensao();
        
        if(tensao<tensaoLigado+0.5 && tensao>tensaoLigado-0.5){
          i++;
        }else{
        i=0;
        auxBreak++;
        }
        
        //se a tensao nao ficar no intervalo especificado por muito tempo havera um aviso de erro
        if(auxBreak==20){
          Serial.println("Erro no acionamento do Motor");
          FSMstate = 0;
        }
      }
      
      if(auxBreak !=20){
        digitalWrite(ligaMotor,LOW);  //Liga motor de arranque por 800ms
        estadoMotor = LIGADO;
        digitalWrite(9,HIGH);
        Serial.println("Motor ligado");
        Serial.print("Velocidade: "); 
        Serial.println(analogRead(A0)); 
        return 0;
      }else return 1;
}

void desligaMotorFunction(){
      //Após velocidade máx ser alcançada, desliga motor e volta servo pra posição inicial
      pos=0;
      servo.write(pos);
      digitalWrite(desligaMotor,HIGH);
      digitalWrite(9,LOW);
      delay(800);
      digitalWrite(desligaMotor,LOW);
      estadoMotor = DESLIGADO;
      Serial.println("Motor desligado");
      Serial.print("Velocidade: "); 
      Serial.println(analogRead(A0)); 
}

void analiseTensao(){
  valorInicial = analogRead(A1);
  tensao = (valorInicial*5.0) / 1024; 
}
